{
	"name": "ExpressionEngine",
	"scopeName": "text.html.expressionengine",
	"patterns": [
		{
			"include": "text.html.basic"
		},
		{
			"begin": "<\\?php",
			"end": "\\?>",
			"name": "source.php.embedded.html",
			"patterns": [
				{
					"include": "source.php"
				}
			]
		},
		{
			"include": "#expressionengine-components"
		}
	],
	"repository": {
		"expressionengine-tags": {
			"begin": "{/?(exp):(\\w*):?(\\w*)?",
			"end": "}",
			"captures": {
				"1": {
					"name": "entity.name.tag.expressionengine"
				},
				"2": {
					"name": "entity.name.tag.expressionengine"
				},
				"3": {
					"name": "entity.name.tag.expressionengine"
				}
			},
			"patterns": [
				{
					"include": "#expressionengine-comments"
				},
				{
					"include": "#expressionengine-parameters"
				},
				{
					"include": "#expressionengine-single-quoted-string"
				},
				{
					"include": "#expressionengine-double-quoted-string"
				}
			]
		},
		"expressionengine-parameters": {
			"match": "\\s([:\\w]+)=?",
			"captures": {
				"1": {
					"name": "variable.parameter.expressionengine"
				}
			}
		},
		"expressionengine-variables": {
			"begin": "{/?([:\\w]+)",
			"end": "}",
			"captures": {
				"1": {
					"name": "variable.other.expressionengine"
				}
			},
			"patterns": [
				{
					"include": "#expressionengine-parameters"
				},
				{
					"include": "#expressionengine-single-quoted-string"
				},
				{
					"include": "#expressionengine-double-quoted-string"
				}
			]
		},
		"expressionengine-comments": {
			"begin": "{!--",
			"end": "--}",
			"name": "comment.block.expressionengine"
		},
		"expressionengine-conditionals": {
			"begin": "{/?(if):?(else)?\\s?(if)?",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.expressionengine"
				},
				"2": {
					"name": "keyword.control.expressionengine"
				},
				"3": {
					"name": "keyword.control.expressionengine"
				}
			},
			"end": "}",
			"patterns": [
				{
					"include": "#expressionengine-keyword-operators"
				},
				{
					"include": "#expressionengine-single-quoted-string"
				},
				{
					"include": "#expressionengine-double-quoted-string"
				}
			]
		},
		"expressionengine-keyword-operators": {
			"match": "\\s(==|!=|<>|<|<=|>|>=|\\^=|\\*=|\\$=|~|!|\\&\\&|\\|\\||AND|XOR|OR|\\+|-|\\*|\\*\\*|\\^|/|%|\\.)\\s",
			"captures": {
				"1": {
					"name": "keyword.operator.expressionengine"
				}
			}
		},
		"expressionengine-single-quoted-string": {
			"name": "string.quoted.single.expressionengine",
			"match": "'[^']*'"
		},
		"expressionengine-double-quoted-string": {
			"name": "string.quoted.double.expressionengine",
			"match": "\"[^\"]*\""
		},
		"expressionengine-components": {
			"patterns": [
				{
					"include": "#expressionengine-tags"
				},
				{
					"include": "#expressionengine-comments"
				},
				{
					"include": "#expressionengine-conditionals"
				},
				{
					"include": "#expressionengine-variables"
				}
			]
		}
	}
}