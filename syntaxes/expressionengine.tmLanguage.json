{
	"name": "Expression Engine",
	"scopeName": "text.html.expressionengine",
	"injections": {
		"R:text.html - (comment.block, text.html source)": {
			"comment": "Use R: to ensure this matches after any other injections.",
			"patterns": [
				{
					"match": "<",
					"name": "invalid.illegal.bad-angle-bracket.html"
				}
			]
		}
	},
	"patterns": [
		{
			"include": "text.html.basic"
		},
		{
			"begin": "(<)([a-zA-Z][a-zA-Z0-9:-]*)(?=[^>]*></\\2>)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.html"
				}
			},
			"end": "(>(<)/)(\\2)(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "meta.scope.between-tag-pair.html"
				},
				"3": {
					"name": "entity.name.tag.html"
				},
				"4": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"name": "meta.tag.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(<\\?)(xml)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.xml.html"
				}
			},
			"end": "(\\?>)",
			"name": "meta.tag.preprocessor.xml.html",
			"patterns": [
				{
					"include": "#tag-generic-attribute"
				},
				{
					"include": "#string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				}
			]
		},
		{
			"begin": "<!--",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.html"
				}
			},
			"end": "--\\s*>",
			"name": "comment.block.html",
			"patterns": [
				{
					"match": "--",
					"name": "invalid.illegal.bad-comments-or-CDATA.html"
				},
				{
					"include": "#components"
				}
			]
		},
		{
			"begin": "<!",
			"captures": {
				"0": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": ">",
			"name": "meta.tag.sgml.html",
			"patterns": [
				{
					"begin": "(?i:DOCTYPE)",
					"captures": {
						"1": {
							"name": "entity.name.tag.doctype.html"
						}
					},
					"end": "(?=>)",
					"name": "meta.tag.sgml.doctype.html",
					"patterns": [
						{
							"match": "\"[^\">]*\"",
							"name": "string.quoted.double.doctype.identifiers-and-DTDs.html"
						}
					]
				},
				{
					"begin": "\\[CDATA\\[",
					"end": "]](?=>)",
					"name": "constant.other.inline-data.html"
				},
				{
					"match": "(\\s*)(?!--|>)\\S(\\s*)",
					"name": "invalid.illegal.bad-comments-or-CDATA.html"
				}
			]
		},
		{
			"include": "#components"
		},
		{
			"begin": "(^[ \\t]+)?(?=<(?i:style))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.leading.html"
				}
			},
			"end": "(?!\\G)([ \\t]*$\\n?)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.trailing.html"
				}
			},
			"patterns": [
				{
					"begin": "(<)((?i:style))\\b",
					"beginCaptures": {
						"0": {
							"name": "meta.tag.metadata.style.html"
						},
						"1": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"2": {
							"name": "entity.name.tag.html"
						}
					},
					"end": "(/>)|((<)/)((?i:style))(>)",
					"endCaptures": {
						"0": {
							"name": "meta.tag.metadata.style.html"
						},
						"1": {
							"name": "punctuation.definition.tag.end.html"
						},
						"2": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"3": {
							"name": "source.css"
						},
						"4": {
							"name": "entity.name.tag.html"
						},
						"5": {
							"name": "punctuation.definition.tag.end.html"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"begin": "\\G",
							"captures": {
								"1": {
									"name": "punctuation.definition.tag.end.html"
								}
							},
							"end": "(?=/>)|(>)",
							"name": "meta.tag.metadata.style.html",
							"patterns": [
								{
									"include": "#tag-stuff"
								}
							]
						},
						{
							"begin": "(?!\\G)",
							"end": "(?=</(?i:style))",
							"name": "source.css",
							"patterns": [
								{
									"include": "#components"
								},
								{
									"include": "source.css"
								}
							]
						}
					]
				}
			]
		},
		{
			"begin": "(^[ \\t]+)?(?=<(?i:script))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.leading.html"
				}
			},
			"end": "(?!\\G)([ \\t]*$\\n?)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.trailing.html"
				}
			},
			"patterns": [
				{
					"begin": "(<)((?i:script))\\b",
					"beginCaptures": {
						"0": {
							"name": "meta.tag.metadata.script.html"
						},
						"1": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"2": {
							"name": "entity.name.tag.html"
						}
					},
					"end": "(/>)|(/)((?i:script))(>)",
					"endCaptures": {
						"0": {
							"name": "meta.tag.metadata.script.html"
						},
						"1": {
							"name": "punctuation.definition.tag.end.html"
						},
						"2": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"3": {
							"name": "entity.name.tag.html"
						},
						"4": {
							"name": "punctuation.definition.tag.end.html"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"begin": "\\G",
							"end": "(?=/>|/)",
							"patterns": [
								{
									"begin": "(>)",
									"beginCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.end.html"
										}
									},
									"end": "((<))(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										},
										"2": {
											"name": "source.js"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(?=</(?i:script))",
											"name": "source.js",
											"patterns": [
												{
													"begin": "(^[ \\t]+)?(?=//)",
													"beginCaptures": {
														"1": {
															"name": "punctuation.whitespace.comment.leading.js"
														}
													},
													"end": "(?!\\G)",
													"patterns": [
														{
															"begin": "//",
															"beginCaptures": {
																"0": {
																	"name": "punctuation.definition.comment.js"
																}
															},
															"end": "(?=</script)|\\n",
															"name": "comment.line.double-slash.js"
														}
													]
												},
												{
													"begin": "/\\*",
													"captures": {
														"0": {
															"name": "punctuation.definition.comment.js"
														}
													},
													"end": "\\*/|(?=</script)",
													"name": "comment.block.js"
												},
												{
													"include": "source.js"
												}
											]
										}
									]
								},
								{
									"begin": "\\G",
									"end": "(?i:(?=/?>|type(?=[\\s=])(?!\\s*=\\s*('|\"|)(text/(javascript|ecmascript|babel)|application/((x-)?javascript|ecmascript|babel)|module)[\\s\"'>])))",
									"name": "meta.tag.metadata.script.html",
									"patterns": [
										{
											"include": "#tag-stuff"
										}
									]
								},
								{
									"begin": "(?=(?i:type\\s*=\\s*('|\"|)(text/(x-handlebars|(x-(handlebars-)?|ng-)?template|html)[\\s\"'>])))",
									"end": "((<))(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										},
										"2": {
											"name": "text.html.basic"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(>)|(?=/>)",
											"endCaptures": {
												"1": {
													"name": "punctuation.definition.tag.end.html"
												}
											},
											"name": "meta.tag.metadata.script.html",
											"patterns": [
												{
													"include": "#tag-stuff"
												}
											]
										},
										{
											"begin": "(?!\\G)",
											"end": "(?=</(?i:script))",
											"name": "text.html.basic",
											"patterns": [
												{
													"include": "text.html.basic"
												}
											]
										}
									]
								},
								{
									"begin": "(?=(?i:type))",
									"end": "(<)(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(>)|(?=/>)",
											"endCaptures": {
												"1": {
													"name": "punctuation.definition.tag.end.html"
												}
											},
											"name": "meta.tag.metadata.script.html",
											"patterns": [
												{
													"include": "#tag-stuff"
												}
											]
										},
										{
											"begin": "(?!\\G)",
											"end": "(?=</(?i:script))",
											"name": "source.unknown"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"begin": "(</?)((?i:body|head|html)\\b)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.structure.any.html"
				}
			},
			"end": "(>)",
			"name": "meta.tag.structure.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)((?i:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)\\b)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.block.any.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.block.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\\b(?!-))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.inline.any.html"
				}
			},
			"end": "((?: ?/)?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.inline.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)([a-zA-Z][a-zA-Z0-9:-]*)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.other.html"
				}
			},
			"end": "(/?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.other.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"include": "#entities"
		},
		{
			"match": "<>",
			"name": "invalid.illegal.incomplete.html"
		},
		{
			"include": "#tag-stuff"
		},
		{
			"captures": {
				"1": {
					"name": "entity.name.tag.expressionengine"
				},
				"2": {
					"name": "entity.name.tag.expressionengine"
				},
				"3": {
					"name": "entity.name.tag.expressionengine"
				}
			},
			"match": "(exp):(\\w*)(:(\\w*))?"
		},
		{
			"include": "#components"
		},
		{
			"include": "#expressionengine-comment"
		},
		{
			"begin": "<\\?php",
			"end": "\\?>",
			"name": "source.php.embedded.html",
			"patterns": [
				{
					"include": "source.php"
				}
			]
		},
		{
			"begin": "{!--",
			"end": "--}",
			"name": "comment.block.expressionengine"
		}
	],
	"repository": {
		"#expressionengine-comment": {
			"begin": "{!--",
			"end": "--}",
			"name": "comment.block.expressionengine"
		},
		"expressionengine-conditional": {
			"patterns": [
				{
					"match": "{\/(if)}",
					"captures": {
						"1": {
							"name": "keyword.other.expressionengine"
						}
					}
				},
				{
					"begin": "{(if)",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.expressionengine"
						}
					},
					"end": "}$",
					"endCaptures": {
						"1": {
							"name": "keyword.other.expressionengine"
						}
					},
					"patterns": [
						{
							"include": "#components"
						},
						{
							"include": "#variable"
						},
						{
							"match": "\\w",
							"name": "variable.parameter.expressionengine"
						}
					]
				}
			]
		},
		"expressionengine-params": {
			"beginCaptures": {
				"1": {
					"name": "variable.parameter.expressionengine"
				}
			},
			"begin": "(\\w+)=",
			"patterns": [
				{
					"name": "string.quoted.single.expressionengine",
					"match": "'{?(\\w|:)+}?'"
				},
				{
					"name": "string.quoted.double.expressionengine",
					"match": "\"{?(\\w|:)+}?\""
				}
			],
			"end": "}"
		},
		"expressionengine-variable": {
			"match": "({(\\w+)})",
			"captures": {
				"1": {
					"name": "variable.other.expressionengine"
				}
			}
		},
		"expressionengine-single-quote": {
			"name": "string.quoted.double.expressionengine",
			"match": "'\\S+'"
		},
		"expressionengine-double-quote": {
			"name": "string.quoted.double.expressionengine",
			"match": "\"\\S+\""
		},
		"expressionengine-variable-pair": {
			"match": "{\/?(?!exp)((\\w|:)+)",
			"captures": {
				"1": {
					"name": "variable.other.expressionengine"
				}
			}
		},
		"components": {
			"patterns": [
				{
					"include": "#expressionengine-comment"
				},
				{
        			"include": "#expressionengine-conditional"
				},
				{
					"include": "#expressionengine-params"
				},
				{
					"include": "#expressionengine-variable"
				},
				{
					"include": "#expressionengine-single-quote"
				},
				{
					"include": "#expressionengine-double-quote"
				},
				{
					"include": "#expressionengine-variable-pair"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.html"
						},
						"3": {
							"name": "punctuation.definition.entity.html"
						}
					},
					"match": "(&)([a-zA-Z0-9]+|#[0-9]+|#[xX][0-9a-fA-F]+)(;)",
					"name": "constant.character.entity.html"
				},
				{
					"match": "&",
					"name": "invalid.illegal.bad-ampersand.html"
				}
			]
		},
		"string-double-quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.double.html",
			"patterns": [
				{
					"include": "#components"
				},
				{
					"include": "#entities"
				}
			]
		},
		"string-single-quoted": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.single.html",
			"patterns": [
				{
					"include": "#components"
				},
				{
					"include": "#entities"
				}
			]
		},
		"tag-generic-attribute": {
			"match": "(?<=[^=])\\b([a-zA-Z0-9:-]+)",
			"name": "entity.other.attribute-name.html"
		},
		"tag-id-attribute": {
			"begin": "\\b(id)\\b\\s*(=)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.id.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?!\\G)(?<='|\"|[^\\s<>/])",
			"name": "meta.attribute-with-value.id.html",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.id.html",
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.double.html",
					"patterns": [
						{
							"include": "#components"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.id.html",
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.single.html",
					"patterns": [
						{
							"include": "#components"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"captures": {
						"0": {
							"name": "meta.toc-list.id.html"
						}
					},
					"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
					"name": "string.unquoted.html"
				}
			]
		},
		"tag-stuff": {
			"patterns": [
				{
					"include": "#tag-id-attribute"
				},
				{
					"include": "#tag-generic-attribute"
				},
				{
					"include": "#string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				},
				{
					"include": "#components"
				},
				{
					"include": "#unquoted-attribute"
				},
				{
					"include": "#expressionengine-comment"
				}
			]
		},
		"unquoted-attribute": {
			"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
			"name": "string.unquoted.html"
		}
	}
}